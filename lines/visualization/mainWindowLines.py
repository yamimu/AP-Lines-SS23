# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'visualization\MainWindowLines.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
from matplotlib.backends.qt_compat import QtWidgets
from matplotlib.backends.backend_qtagg import FigureCanvasQTAgg as FigureCanvas
import matplotlib.pyplot as plt
import matplotlib.axes as axes
import networkx as nx 
from ..base.graph import Graph, Node


class Ui_Lines(object):
    def setupUi(self, Lines):
        Lines.setObjectName("Lines")
        Lines.resize(1087, 757)
        font = QtGui.QFont()
        font.setPointSize(10)
        Lines.setFont(font)
        self.centralwidget = QtWidgets.QWidget(Lines)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton_start = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_start.setGeometry(QtCore.QRect(900, 260, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_start.setFont(font)
        self.pushButton_start.setObjectName("pushButton_start")
        
        #initialize Widget to show a graph on a canvas
        
        self.graphView = QtWidgets.QWidget(self.centralwidget)
#        self.graphView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphView.setGeometry(QtCore.QRect(20, 90, 791, 531))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.graphView.setFont(font)
        self.graphView.setObjectName("graphView")
        layout = QtWidgets.QVBoxLayout(self.graphView)
        self.figure = plt.figure()
        self.graphView.canvas = FigureCanvas(self.figure)
        layout.addWidget(self.graphView.canvas)

        #create example networkx graph
        g = self.createGraph()
        g = g.toNx()
        
        #draw graph with axes and show on canvas
        ax = self.figure.add_subplot()
        nx.draw_networkx(g, nx.get_node_attributes(g, 'pos'), ax=ax)
        ax.set_axis_on()
        ax.tick_params(left=True, bottom=True, labelleft=True, labelbottom=True)
        self.graphView.canvas.draw_idle()

        self.label_lines = QtWidgets.QLabel(self.centralwidget)
        self.label_lines.setGeometry(QtCore.QRect(380, 20, 321, 31))
        self.label_lines.setAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_lines.setFont(font)
        self.label_lines.setScaledContents(False)
        self.label_lines.setObjectName("label_lines")
        self.label_start = QtWidgets.QLabel(self.centralwidget)
        self.label_start.setGeometry(QtCore.QRect(820, 110, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_start.setFont(font)
        self.label_start.setObjectName("label_start")
        self.textEdit_x = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_x.setGeometry(QtCore.QRect(860, 150, 191, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.textEdit_x.setFont(font)
        self.textEdit_x.setObjectName("textEdit_x")
        self.label_x = QtWidgets.QLabel(self.centralwidget)
        self.label_x.setGeometry(QtCore.QRect(830, 150, 21, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_x.setFont(font)
        self.label_x.setObjectName("label_x")
        self.label_y = QtWidgets.QLabel(self.centralwidget)
        self.label_y.setGeometry(QtCore.QRect(830, 200, 21, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_y.setFont(font)
        self.label_y.setObjectName("label_y")
        self.textEdit_y = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_y.setGeometry(QtCore.QRect(860, 200, 191, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.textEdit_y.setFont(font)
        self.textEdit_y.setObjectName("textEdit_y")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(960, 590, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.label_winner = QtWidgets.QLabel(self.centralwidget)
        self.label_winner.setGeometry(QtCore.QRect(830, 320, 71, 21))
        self.label_winner.setObjectName("label_winner")
        self.label_winningPlayer = QtWidgets.QLabel(self.centralwidget)
        self.label_winningPlayer.setGeometry(QtCore.QRect(900, 370, 101, 21))
        self.label_winningPlayer.setText("")
        self.label_winningPlayer.setObjectName("label_winningPlayer")
        Lines.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Lines)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1087, 29))
        self.menubar.setObjectName("menubar")
        Lines.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Lines)
        self.statusbar.setObjectName("statusbar")
        Lines.setStatusBar(self.statusbar)

        self.retranslateUi(Lines)
        QtCore.QMetaObject.connectSlotsByName(Lines)

    def retranslateUi(self, Lines):
        _translate = QtCore.QCoreApplication.translate
        Lines.setWindowTitle(_translate("Lines", "Lines"))
        self.pushButton_start.setText(_translate("Lines", "Start"))
        self.label_lines.setText(_translate("Lines", "Lines - Level 1"))
        self.label_start.setText(_translate("Lines", "Startpunkt:"))
        self.label_x.setText(_translate("Lines", "x:"))
        self.label_y.setText(_translate("Lines", "y:"))
        self.pushButton.setText(_translate("Lines", "Next Level"))
#        self.label_winner.setText(_translate("Lines", "Winner:"))

    def createGraph(self):
        node0 = Node(coord = [0,0])
        node1 = Node(coord = [0,4])
        node2 = Node(coord = [4,4])
        node3 = Node(coord = [4,0])
        node4 = Node(coord=[5,0])
        edges = [(0,1),(0,3),(0,2),(1,2),(2,3)]
        g = Graph([node0,node1,node2,node3], edges)
        g.add_node(node4,[g.nodes[0],g.nodes[1]])

        return g

if __name__ == '__main__':

    sys.path.append('..')

    app = QApplication(sys.argv)
    Lines = QMainWindow()
    mainWindow = Ui_Lines()
    mainWindow.setupUi(Lines)   
    Lines.show()
    sys.exit(app.exec_())